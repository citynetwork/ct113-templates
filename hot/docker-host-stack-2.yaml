heat_template_version: wallaby

parameters:
  flavor:
    type: string
    description: Flavor to use
    default: b.2c2gb
  image:
    type: string
    description: Image name
    default: Ubuntu 22.04 Jammy Jellyfish x86_64
  boot_volume_size:
    type: number
    description: Boot volume size
    default: 16
  key_name:
    type: string
    description: Keypair to inject into server
    default: ''
  public_net:
    type: string
    description: Public network name
    default: ext-net
  config_drive:
    type: boolean
    description: Use config_drive for metadata discovery
    default: true

resources:

  mydockerhost:
    type: "OS::Nova::Server"
    properties:
      name: dockerhost
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: dockerhost_management_port }
      block_device_mapping:
        - device_name: vda
          volume_id: { get_resource: mydockerhost_boot_volume }
          delete_on_termination: false
      config_drive: { get_param: config_drive }

  mydockerhost_boot_volume:
    type: "OS::Cinder::Volume"
    properties:
      image: { get_param: image }
      size: { get_param: boot_volume_size }

  dockerhost_management_port:
    type: "OS::Neutron::Port"
    properties:
      network_id: { get_resource: mynet }
      security_groups:
        - { get_resource: mysecurity_group }

  mynet:
    type: "OS::Neutron::Net"
    properties:
      name: management-net

  mysub_net:
    type: "OS::Neutron::Subnet"
    properties:
      name: management-sub-net
      network_id: { get_resource: mynet }
      cidr: 192.168.254.0/24
      gateway_ip: 192.168.254.254
      enable_dhcp: true
      dns_nameservers:
        - "1.1.1.1"
        - "8.8.8.8"
      allocation_pools:
        - start: "192.168.254.200"
          end: "192.168.254.253"

  mysecurity_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Neutron security group rules
      name: mysecurity_group
      rules:
      - remote_ip_prefix: 0.0.0.0/0
        protocol: tcp
        port_range_min: 22
        port_range_max: 22
      - remote_ip_prefix: 0.0.0.0/0
        protocol: icmp
        direction: ingress

  router:
    type: OS::Neutron::Router

  router_gateway:
    type: OS::Neutron::RouterGateway
    properties:
      router_id: { get_resource: router }
      network_id: { get_param: public_net }

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: mysub_net }

  myfloating_ip:
    type: "OS::Neutron::FloatingIP"
    properties:
      floating_network_id: { get_param: public_net }
      port_id: { get_resource: dockerhost_management_port }
    depends_on:
      - router_interface
      - router_gateway

outputs:
  public_ip:
    description: Floating IP address in public network
    value: { get_attr: [ myfloating_ip, floating_ip_address ] }
